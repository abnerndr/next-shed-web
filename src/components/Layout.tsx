"use client";
import { usePathname, useRouter } from "next/navigation";
import { ReactNode, useEffect } from "react";
import type { Metadata } from "next";
import { ToastContainer } from "react-toastify";
import { Inter as FontSans } from "next/font/google";

import { checkIsPublicRoute } from "@/utils/functions/check-route";
import PrivateRouteProvider from "./provider/PrivateRouteProvider";
import { cn } from "@/lib/utils";
import Provider from "@/app/provider";
import { checkUserisAuthenticated } from "@/utils/functions/check-user";

import "@/assets/styles/globals.css";
import "react-toastify/dist/ReactToastify.css";

interface ILayout {
  children: ReactNode;
}

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
});

function Layout({ children }: ILayout) {
  const pathname = usePathname();
  const route = useRouter();
  const isPublic = checkIsPublicRoute(pathname);
  const isAuth = checkUserisAuthenticated();

  useEffect(() => {
    if (pathname === "/" && isAuth) {
      route.push("/dashboard");
    }
  }, [isAuth, isPublic, pathname, route]);
  return (
    <>
      <html lang="en">
        <link
          rel="apple-touch-icon"
          sizes="180x180"
          href="/apple-touch-icon.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/favicon-32x32.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/favicon-16x16.png"
        />
        <link rel="manifest" href="/site.webmanifest" />
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#515151" />
        <meta name="msapplication-TileColor" content="#2d2d2d" />
        <meta name="theme-color" content="#ffffff" />
        <body
          className={cn(
            "min-h-screen bg-background font-sans antialiased",
            fontSans.variable
          )}
        >
          <Provider>
            {isPublic && children}
            {!isPublic && (
              <PrivateRouteProvider>{children}</PrivateRouteProvider>
            )}
            <ToastContainer
              hideProgressBar={true}
              closeOnClick
              draggable
              closeButton
              position="bottom-right"
              rtl={false}
              style={{ width: "500px" }}
            />
          </Provider>
        </body>
      </html>
    </>
  );
}

export default Layout;
